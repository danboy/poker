mixin story(story, due)
  article(class='story #{story.story_type}')
    menu
      - if(story.estimate != undefined)
          li.estimate
            - if(story.estimate == '-1')
              a( data-story='#{story.id}', 'class'='estimate') estimate
            - else
              strong= story.estimate
              | points
      - else
          li.type= story.story_type
      li= story.current_state
      li.placeholder
        menu.tools
          li delete
          li unassign
          li icebox
      li.labels= story.labels
      li.due
        strong= due.Month
        #{due.date}
    h3= story.name
    details( open: 'open')
      summary
      - if(typeof(story.description) == "string")
        != replaceUrl(story.description)
      - if (story.notes)
        .notes
          - each note in story.notes
            - if (note.text)
              .note!= replaceUrl(note.text)
            - else
              - each n in note
                .note!= replaceUrl(n.text)

menu
  li.button#present Start Presentation
ol#iterations
  - each iteration in iterations
    li
      - var due = formatDate(iteration.finish);
      - var start = formatDate(iteration.start);
      h2 #{start.Day}, #{start.Month} #{start.date}
      - if(iteration.stories.story)
        - if (iteration.stories.story && !iteration.stories.story.id)
          - each story in iteration.stories.story
            mixin story(story, due)
        - else if (iteration.stories.story && iteration.stories.story.id)
          mixin story(iteration.stories.story, due)


script(src="/js/presenter.js")
script(src="/js/poker.js")
script(src="http://majek.github.com/sockjs-client/sockjs-latest.min.js")
script
  var sock = new SockJS(window.location.origin + '/ipm/#{projectId}');
  sock.onmessage = function(message) {
    var data = JSON.parse(message.data);
    if(data.instruction !== 'poker'){
      if(typeof(pres) == 'undefined'){
        pres = new Presentation('.story', #{projectId}, data.slide);
      }
      pres.show(data.slide);
    }else{
      console.log('poker');
    }
  };
  sock.onclose = function(m) {
    console.log('closed',m.status,m.reason);
    //window.location.reload();
    pres.stop();
  };
  $('#present').click(function(ev){
    ev.preventDefault();
    sock.send({instruction: 'start',slide: 0, project: #{projectId}});
  });


