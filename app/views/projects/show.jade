extends ../layout
mixin story(story, due)
  article(class='story #{story.story_type}')
    menu
      - if(story.estimate != undefined)
        li.estimate('data-storyId'=story.id)
            - if(story.estimate == '-1')
              a( data-story='#{story.id}', 'class'='estimate') estimate
            - else
              strong= story.estimate
              | points
      - else
          li.type= story.story_type
      li.present Start Presentation here
      li= story.current_state
      li.card
        a( href= '/pdf/print/#{project.id}/#{story.id}') card
      li.due
        strong= due.Month
        = due.date
    h3= story.name
    pre.description
      - if(typeof(story.description) == "string")
        != replaceUrl(story.description)
      - if (story.notes)
        .notes
          - each note in story.notes
            - if (note.text)
              .note!= replaceUrl(note.text)
            - else
              - each n in note
                .note!= replaceUrl(n.text)
block content
  h1= project.name
  ol#iterations
    - each iteration in iterations
      li.row
        - var due = formatDate(iteration.finish);
        - var start = formatDate(iteration.start);
        .six
          h2 #{start.Day}, #{start.Month} #{start.date}
        .ten
          - if(iteration.stories.story)
            - if (iteration.stories.story && !iteration.stories.story.id)
              - each story in iteration.stories.story
                mixin story(story, due)
            - else if (iteration.stories.story && iteration.stories.story.id)
              mixin story(iteration.stories.story, due)


  script(src="/js/presenter.js")
  script(src="/js/poker.js")
  script(src="http://majek.github.com/sockjs-client/sockjs-latest.min.js")
  script
    var sock = new SockJS(window.location.origin + '/ipm/#{projectId}');
    sock.onmessage = function(message) {
      var data = JSON.parse(message.data);
      if(typeof(pres) == 'undefined')
        pres = new Presentation('.story', '#{projectId}', data.slide);
      if(data.instruction != 'stop')
        pres.show(data.slide);
      switch(data.instruction){
      case 'results':
        console.log(data);
        break;
      case 'launch estimate':
        new Game($(this).data('storyid'), sock, [#{project.point_scale}], '#{user}');
        break;
      }
    }
    sock.onclose = function(m) {
      sock = new SockJS(window.location.origin + '/ipm/#{projectId}');
    };

    $('.present').click(function(ev){
      ev.preventDefault();
      sock.send({instruction: 'present', slide: $('.story').index($(this).parents('.story')), project: '#{projectId}'});
    });
    $('.estimate').click(function(ev){
      ev.preventDefault();
      new Estimate($(this).data('storyid'), sock, [#{project.point_scale}], '#{user}');
      sock.send({instruction: 'launch estimate', story: $(this).data('storyid'), project: '#{projectId}'});
    });
